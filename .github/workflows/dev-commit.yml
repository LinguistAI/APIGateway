name: Backend Dev Workflow

on:
  push:
    branches: [ dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.17
      uses: actions/setup-java@v1
      with:
        java-version: '1.17'
        distribution: 'adopt'
        cache: maven

    - name: Build with Maven
      run: mvn clean install
      env:
        JWT_ACCESS_KEY: ${{ secrets.JWT_ACCESS_KEY }}
        JWT_REFRESH_KEY: ${{ secrets.JWT_REFRESH_KEY }}
        JWT_ACCESS_VALID_MINUTES: ${{ vars.JWT_ACCESS_VALID_MINUTES }}
        JWT_REFRESH_VALID_MINUTES: ${{ vars.JWT_REFRESH_VALID_MINUTES }}
        URI_USER_SERVICE: ${{ vars.URI_USER_SERVICE }}
        URI_DICTIONARY_SERVICE: ${{ vars.URI_DICTIONARY_SERVICE }}
        URI_ML_SERVICE: ${{ vars.URI_ML_SERVICE }}

    - name: Upload build artifact
      uses: actions/upload-artifact@master
      with:
        name: backend-dev-artifact
        path: .

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download build artifact
      uses: actions/download-artifact@master
      with:
        name: gateway-dev-artifact
        path: .

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: linguistai/gateway-dev
        tags: latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

  deploy:
    needs: publish
    runs-on: ubuntu-latest
    steps:
    - name: Docker Pull & Run From DockerHub
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker pull linguistai/gateway-dev:latest
          docker stop gateway-dev
          docker rm gateway-dev
          cd /home/tolgaozgun/LinguistAI-dev
          docker-compose up -d
